/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.pti.sdk.resources.collectuserdata.requests;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pti.sdk.core.ObjectMappers;
import com.pti.sdk.types.DocumentMetaInformation;
import com.pti.sdk.types.IdDocumentMetadata;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = UploadDocumentRequest.Builder.class
)
public final class UploadDocumentRequest {
  private final Optional<DocumentMetaInformation> metaInformation;

  private final Optional<IdDocumentMetadata> idDocumentMetaData;

  private final Map<String, Object> additionalProperties;

  private UploadDocumentRequest(Optional<DocumentMetaInformation> metaInformation,
      Optional<IdDocumentMetadata> idDocumentMetaData, Map<String, Object> additionalProperties) {
    this.metaInformation = metaInformation;
    this.idDocumentMetaData = idDocumentMetaData;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("metaInformation")
  public Optional<DocumentMetaInformation> getMetaInformation() {
    return metaInformation;
  }

  @JsonProperty("idDocumentMetaData")
  public Optional<IdDocumentMetadata> getIdDocumentMetaData() {
    return idDocumentMetaData;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof UploadDocumentRequest && equalTo((UploadDocumentRequest) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(UploadDocumentRequest other) {
    return metaInformation.equals(other.metaInformation) && idDocumentMetaData.equals(other.idDocumentMetaData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.metaInformation, this.idDocumentMetaData);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static Builder builder() {
    return new Builder();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder {
    private Optional<DocumentMetaInformation> metaInformation = Optional.empty();

    private Optional<IdDocumentMetadata> idDocumentMetaData = Optional.empty();

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    public Builder from(UploadDocumentRequest other) {
      metaInformation(other.getMetaInformation());
      idDocumentMetaData(other.getIdDocumentMetaData());
      return this;
    }

    @JsonSetter(
        value = "metaInformation",
        nulls = Nulls.SKIP
    )
    public Builder metaInformation(Optional<DocumentMetaInformation> metaInformation) {
      this.metaInformation = metaInformation;
      return this;
    }

    public Builder metaInformation(DocumentMetaInformation metaInformation) {
      this.metaInformation = Optional.ofNullable(metaInformation);
      return this;
    }

    @JsonSetter(
        value = "idDocumentMetaData",
        nulls = Nulls.SKIP
    )
    public Builder idDocumentMetaData(Optional<IdDocumentMetadata> idDocumentMetaData) {
      this.idDocumentMetaData = idDocumentMetaData;
      return this;
    }

    public Builder idDocumentMetaData(IdDocumentMetadata idDocumentMetaData) {
      this.idDocumentMetaData = Optional.ofNullable(idDocumentMetaData);
      return this;
    }

    public UploadDocumentRequest build() {
      return new UploadDocumentRequest(metaInformation, idDocumentMetaData, additionalProperties);
    }
  }
}
