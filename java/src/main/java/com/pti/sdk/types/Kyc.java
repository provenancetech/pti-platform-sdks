/**
 * This file was auto-generated by Fern from our API Definition.
 */

package com.pti.sdk.types;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.Nulls;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.pti.sdk.core.ObjectMappers;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;

@JsonInclude(JsonInclude.Include.NON_ABSENT)
@JsonDeserialize(
    builder = Kyc.Builder.class
)
public final class Kyc {
  private final Optional<KycStatus> status;

  private final Optional<Integer> tier;

  private final Optional<Map<String, Object>> clientMeta;

  private final Optional<String> requestId;

  private final Map<String, Object> additionalProperties;

  private Kyc(Optional<KycStatus> status, Optional<Integer> tier,
      Optional<Map<String, Object>> clientMeta, Optional<String> requestId,
      Map<String, Object> additionalProperties) {
    this.status = status;
    this.tier = tier;
    this.clientMeta = clientMeta;
    this.requestId = requestId;
    this.additionalProperties = additionalProperties;
  }

  @JsonProperty("status")
  public Optional<KycStatus> getStatus() {
    return status;
  }

  /**
   * @return related kyc tier level
   */
  @JsonProperty("tier")
  public Optional<Integer> getTier() {
    return tier;
  }

  /**
   * @return key/value map of extra meta data for this kyc
   */
  @JsonProperty("clientMeta")
  public Optional<Map<String, Object>> getClientMeta() {
    return clientMeta;
  }

  @JsonProperty("requestId")
  public Optional<String> getRequestId() {
    return requestId;
  }

  @Override
  public boolean equals(Object other) {
    if (this == other) return true;
    return other instanceof Kyc && equalTo((Kyc) other);
  }

  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return this.additionalProperties;
  }

  private boolean equalTo(Kyc other) {
    return status.equals(other.status) && tier.equals(other.tier) && clientMeta.equals(other.clientMeta) && requestId.equals(other.requestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.status, this.tier, this.clientMeta, this.requestId);
  }

  @Override
  public String toString() {
    return ObjectMappers.stringify(this);
  }

  public static Builder builder() {
    return new Builder();
  }

  @JsonIgnoreProperties(
      ignoreUnknown = true
  )
  public static final class Builder {
    private Optional<KycStatus> status = Optional.empty();

    private Optional<Integer> tier = Optional.empty();

    private Optional<Map<String, Object>> clientMeta = Optional.empty();

    private Optional<String> requestId = Optional.empty();

    @JsonAnySetter
    private Map<String, Object> additionalProperties = new HashMap<>();

    private Builder() {
    }

    public Builder from(Kyc other) {
      status(other.getStatus());
      tier(other.getTier());
      clientMeta(other.getClientMeta());
      requestId(other.getRequestId());
      return this;
    }

    @JsonSetter(
        value = "status",
        nulls = Nulls.SKIP
    )
    public Builder status(Optional<KycStatus> status) {
      this.status = status;
      return this;
    }

    public Builder status(KycStatus status) {
      this.status = Optional.ofNullable(status);
      return this;
    }

    @JsonSetter(
        value = "tier",
        nulls = Nulls.SKIP
    )
    public Builder tier(Optional<Integer> tier) {
      this.tier = tier;
      return this;
    }

    public Builder tier(Integer tier) {
      this.tier = Optional.ofNullable(tier);
      return this;
    }

    @JsonSetter(
        value = "clientMeta",
        nulls = Nulls.SKIP
    )
    public Builder clientMeta(Optional<Map<String, Object>> clientMeta) {
      this.clientMeta = clientMeta;
      return this;
    }

    public Builder clientMeta(Map<String, Object> clientMeta) {
      this.clientMeta = Optional.ofNullable(clientMeta);
      return this;
    }

    @JsonSetter(
        value = "requestId",
        nulls = Nulls.SKIP
    )
    public Builder requestId(Optional<String> requestId) {
      this.requestId = requestId;
      return this;
    }

    public Builder requestId(String requestId) {
      this.requestId = Optional.ofNullable(requestId);
      return this;
    }

    public Kyc build() {
      return new Kyc(status, tier, clientMeta, requestId, additionalProperties);
    }
  }
}
