"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorType = void 0;
const core = __importStar(require("../../core"));
exports.ErrorType = core.serialization.enum_([
    "NO_ERROR",
    "INVALID_REQUEST",
    "MIN_INFO_MISSING",
    "MIN_ASSESSMENT_MISSING",
    "ALREADY_IN_PROGRESS",
    "MISSING_WALLET",
    "WALLETS_DIFFERENT_CURRENCY",
    "WALLETS_SAME_CURRENCY",
    "SOURCE_WALLET_DESTINATION_TOKEN_ONLY",
    "ITEM_USD_VALUE_REQUIRED_WHEN_MULTIPLE_ITEMS",
    "INVALID_USER_TAG",
    "MISSING_TRANSACTION_GROUP_ID",
    "DIFFERENT_BUY_SELL_AMOUNT",
    "DIFFERENT_BUY_SELL_CURRENCIES",
    "WALLET_MISSING_NETWORK",
    "PAYMENT_METHOD_TYPE_REQUIRED",
    "AMOUNT_REQUIRED",
    "INVALID_TRANSACTION_TYPE",
    "INVALID_TRANSACTION_STATUS",
    "INVALID_BANK_ACCOUNT_NUMBER",
    "NO_INTER_CLIENTS_TRANSFERS",
    "CLIENT_CONFIGURATION_ERROR",
    "UNSUPPORTED_OPERATION",
    "COUNTRY_NOT_SUPPORTED",
    "UNSUPPORTED_CURRENCY",
    "UNSUPPORTED_FIAT_CURRENCY",
    "UNSUPPORTED_CRYPTO_CURRENCY",
    "UNSUPPORTED_DEPOSIT_ADDRESS",
    "INVALID_WALLET_PROVIDER",
    "INVALID_WALLET_PROVIDER_CONFIGURATION",
    "INVALID_ACH_PROVIDER_CONFIGURATION",
    "NOT_ENOUGH_FUNDS",
    "INVALID_ASSET_OWNERSHIP",
    "FEES_WALLET_NOT_FOUND",
    "REVERT_ONLY_CHARGE_BACK",
    "MISSING_CORRESPONDING_BUY_TRANSACTION",
    "ALREADY_EXISTING_CORRESPONDING_TRANSACTION_PAIR",
    "BUY_TRANSACTION_NOT_SETTLED",
    "FIAT_ONLY",
    "SOURCE_DESTINATION_WALLET",
    "INVALID_SOURCE_CURRENCY",
    "INVALID_DESTINATION_CURRENCY",
    "USD_WALLET_ONLY",
    "NON_CORRESPONDING_USERS_FOR_TRANSACTION",
    "UNSUPPORTED_SOURCE_METHOD",
    "WALLET_REFERENCE_ALREADY_EXISTS",
    "UNABLE_TO_DELETE_WALLET_WITH_NONZERO_BALANCE",
    "WALLET_DELETED",
    "WALLET_LABEL_ALREADY_IN_USE",
    "EXCEEDED_ACH_PULL_DEPOSIT_LIMIT",
    "USER_EXCEEDED_ACH_PULL_DEPOSIT_LIMIT",
    "MAXIMUM_ACH_PULL_LIMIT_EXCEEDED",
    "TRANSACTION_CANNOT_BE_CANCELED",
    "BLOCKED_ASSET",
    "BANK_ONLY",
    "MISSING_EMAIL_ADDRESS",
    "MISSING_BANK_ACCOUNT_INFORMATION",
    "MISSING_BANK_ACCOUNT_NUMBER_INFORMATION",
    "MISSING_BANK_ACCOUNT_TYPE",
    "FUNDING_FROM_ACH_ONLY",
    "WITHDRAWING_FROM_WALLET_ONLY",
    "WITHDRAWING_TO_ACH_WIRE_ONLY",
    "FUNDING_TO_WALLET_ONLY",
    "MANDATORY_IP_ADDRESS",
    "MANDATORY_EMAIL_ADDRESS",
    "MISSING_CC_INFO",
    "CC_ONLY",
    "UNABLE_TO_PROVIDE_ESTIMATES",
    "FUNDING_FROM_CRYPTO_ONLY",
    "WITHDRAWAL_FROM_WALLET_TO_CRYPTO",
    "SOURCE_WALLET_CURRENCY_DIFFERENT_THAN_DESTINATION_TOKEN_CURRENCY",
]);
